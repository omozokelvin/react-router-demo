{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","HighlightedQuote","props","className","classes","quote","text","author","QuoteDetail","useHttp","getSingleQuote","sendRequest","status","loadedQuote","data","error","quoteId","useParams","useEffect","LoadingSpinner"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,MAAQ,kC,iFCUXC,EATU,SAACC,GACxB,OACE,yBAAQC,UAAWC,IAAQC,MAA3B,UACE,4BAAIH,EAAMI,OACV,qCAAaJ,EAAMK,a,uBCwCVC,UAvCK,WAClB,MAKIC,YAAQC,KAAgB,GAJ1BC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAGMC,EAAYC,cAAZD,QAMR,OAJAE,qBAAU,WACRP,EAAYK,KACX,CAACA,EAASL,IAEE,YAAXC,EAEA,qBAAKT,UAAU,WAAf,SACE,cAACgB,EAAA,EAAD,MAKFJ,EACK,mBAAGZ,UAAU,WAAb,SAAyBY,IAG9B,OAACF,QAAD,IAACA,KAAaP,KAKhB,eAAC,WAAD,WACE,cAAC,EAAD,CAAkBA,KAAI,OAAEO,QAAF,IAAEA,OAAF,EAAEA,EAAaP,KAAMC,OAAM,OAAEM,QAAF,IAAEA,OAAF,EAAEA,EAAaN,SAEhE,cAAC,IAAD,OAPK","file":"static/js/7.6482b760.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\n\nconst QuoteDetail = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  const { quoteId } = useParams();\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (!loadedQuote?.text) {\n    return <p>No quote found.</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote?.text} author={loadedQuote?.author} />\n\n      <Outlet />\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"sourceRoot":""}